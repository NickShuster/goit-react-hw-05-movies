{"version":3,"file":"static/js/115.47fbcb9a.chunk.js","mappings":"wNAIMA,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GAoBH,OApBGA,EAAAA,EAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KACJC,MAAQ,CACNC,MAAO,GACPC,cAAe,IAFT,EAKRC,aAAe,SAACC,GACd,EAAKC,SAAS,CAAEJ,MAAOG,EAAEE,OAAOC,OACjC,IAEDC,aAAe,SAACJ,GACdA,EAAEK,kBAEFC,EAAAA,EAAAA,IAAa,EAAKV,MAAMC,OACrBU,MAAK,SAACT,GACL,EAAKG,SAAS,CAAEH,cAAAA,GACjB,IACAU,OAAM,SAACC,GACNC,QAAQD,MAAM,uBAAwBA,EACvC,GACJ,IA0BA,OA1BA,8BAED,WACE,MAAiCE,KAAKf,MAA9BC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,cAEf,OACE,4BAEE,kBAAMc,SAAUD,KAAKP,aAArB,WACE,kBACES,KAAK,OACLV,MAAON,EACPiB,SAAUH,KAAKZ,aACfgB,YAAY,2BAEd,mBAAQF,KAAK,SAAb,wBAEF,wBACGf,EAAckB,KAAI,SAACC,GAAD,OACjB,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAA3B,SAAkCF,EAAMG,SADjCH,EAAME,GADE,QAQ1B,OA9CGxB,CAAe0B,EAAAA,WAiDrB,W,+LCnDMC,EAAU,mCACVC,EAAW,+BAEXC,EAAmB,mCAAG,6GAEDC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,wCACsBD,IAHrB,cAElBI,EAFkB,yBAKjBA,EAASC,KAAKC,SALG,oGAAH,qDAWnBtB,EAAY,mCAAG,WAAOT,GAAP,gGAEM4B,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iCACeD,EADf,kBACgCzB,IAHtC,cAEX6B,EAFW,yBAKVA,EAASC,KAAKC,SALJ,oGAAH,sDAWZC,EAAiB,mCAAG,WAAOC,GAAP,gGAECL,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAO,EADA,oBACmBR,IAHpB,cAEhBI,EAFgB,yBAKfA,EAASC,MALM,oGAAH,sDAWjBI,EAAiB,mCAAG,WAAOD,GAAP,gGAECL,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAO,EADA,4BAC2BR,IAH5B,cAEhBI,EAFgB,yBAKfA,EAASC,KAAKK,MALC,oGAAH,sDAWjBC,EAAiB,mCAAG,WAAOH,GAAP,gGAECL,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAO,EADA,4BAC2BR,IAH5B,cAEhBI,EAFgB,yBAKfA,EAASC,KAAKC,SALC,oGAAH,qD","sources":["components/Movies/Movies.jsx","components/api.js"],"sourcesContent":["  import React, { Component } from 'react';\nimport { searchMovies } from '../api';\nimport { Link } from 'react-router-dom';\n\nclass Movies extends Component {\n  state = {\n    query: '',\n    searchResults: [],\n  };\n\n  handleChange = (e) => {\n    this.setState({ query: e.target.value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    searchMovies(this.state.query)\n      .then((searchResults) => {\n        this.setState({ searchResults });\n      })\n      .catch((error) => {\n        console.error('Error fetching data:', error);\n      });\n  };\n\n  render() {\n    const { query, searchResults } = this.state;\n\n    return (\n      <div>\n        \n        <form onSubmit={this.handleSubmit}>\n          <input\n            type=\"text\"\n            value={query}\n            onChange={this.handleChange}\n            placeholder=\"Search for a movie...\"\n          />\n          <button type=\"submit\">Search</button>\n        </form>\n        <ul>\n          {searchResults.map((movie) => (\n            <li key={movie.id}>\n              <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Movies;  \n\n"," import axios from 'axios';\n\nconst API_KEY = '4f40632f604dfec179dda8e530bb62da';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst fetchTrendingMovies = async () => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/trending/movie/week?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    throw error;\n  }\n};\n\nconst searchMovies = async (query) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return response.data.results;\n  } catch (error) {\n    throw error;\n  }\n};\n\nconst fetchMovieDetails = async (movieId) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nconst fetchMovieCredits = async (movieId) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return response.data.cast;\n  } catch (error) {\n    throw error;\n  }\n};\n\nconst fetchMovieReviews = async (movieId) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport {\n  fetchTrendingMovies,\n  searchMovies,\n  fetchMovieDetails,\n  fetchMovieCredits,\n  fetchMovieReviews,\n};"],"names":["Movies","state","query","searchResults","handleChange","e","setState","target","value","handleSubmit","preventDefault","searchMovies","then","catch","error","console","this","onSubmit","type","onChange","placeholder","map","movie","to","id","title","Component","API_KEY","BASE_URL","fetchTrendingMovies","axios","response","data","results","fetchMovieDetails","movieId","fetchMovieCredits","cast","fetchMovieReviews"],"sourceRoot":""}
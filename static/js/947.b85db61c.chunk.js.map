{"version":3,"file":"static/js/947.b85db61c.chunk.js","mappings":"iOA2FA,UAvFA,YAAwC,IAAhBA,EAAe,EAAfA,YACdC,GAAYC,EAAAA,EAAAA,MAAZD,QACAE,GAAWC,EAAAA,EAAAA,MAAXD,OACFE,EAAa,IAAIC,gBAAgBH,GAAQI,IAAI,cACnD,GAAwCC,EAAAA,EAAAA,UAAS,CAAC,GAAlD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAsCF,EAAAA,EAAAA,WAAS,GAA/C,eAAOG,EAAP,KAAoBC,EAApB,KACA,GAA4CJ,EAAAA,EAAAA,WAAS,GAArD,eAAOK,EAAP,KAAuBC,EAAvB,KACA,GAA8BN,EAAAA,EAAAA,UAAS,IAAvC,eAAOO,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRnB,IAEA,IAAMoB,EAAS,mCAAG,gHAEUC,EAAAA,EAAAA,IAAkBpB,GAF5B,cAERqB,EAFQ,OAGdZ,EAAgBY,GAHF,UAKaC,EAAAA,EAAAA,IAAkBtB,GAL/B,OAKRuB,EALQ,OAMdR,EAAWQ,GANG,kDAQdC,QAAQC,MAAM,4LAAd,MARc,0DAAH,qDAYfN,GACD,GAAE,CAACnB,EAASD,IAEb,IAAM2B,EAAYlB,EAAamB,YAAb,0CACqBnB,EAAamB,aAChD,GAoBJ,OACE,4BACE,mBAAQC,QApBG,WAEXZ,EADiB,SAAfZ,EACO,UAEA,IAEZ,EAcG,sBACA,wBAAKI,EAAaqB,QACjBH,IAAa,gBAAKI,IAAKJ,EAAWK,IAAKvB,EAAaqB,SACrD,uBAAIrB,EAAawB,YACjB,2BACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAajC,EAAb,4BAAwCI,GAAcwB,QAlBzC,WAC3BjB,GAAe,SAACuB,GAAD,OAAgBA,CAAhB,IACfrB,GAAkB,EACnB,EAeO,qBAIF,yBACE,SAAC,KAAD,CAAMoB,GAAE,kBAAajC,EAAb,+BAA2CI,GAAcwB,QAlBzC,WAC9Bf,GAAkB,SAACqB,GAAD,OAAgBA,CAAhB,IAClBvB,GAAe,EAChB,EAeO,0BAMHD,IAAe,SAAC,KAAD,IAEfE,IACC,0BACE,wBACGE,EAAQqB,KAAI,SAACC,GAAD,OACX,2BACE,oCAAYA,EAAOC,WACnB,uBAAID,EAAOE,YAFJF,EAAOG,GADL,UAWxB,C,+LCTKC,EAAU,mCACVC,EAAW,+BAEXC,EAAmB,mCAAG,6GAEDC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,wCACsBD,IAHrB,cAElBI,EAFkB,yBAKjBA,EAASC,KAAKC,SALG,oGAAH,qDAWnBC,EAAY,mCAAG,WAAOC,GAAP,gGAEML,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iCACeD,EADf,kBACgCQ,IAHtC,cAEXJ,EAFW,yBAKVA,EAASC,KAAKC,SALJ,oGAAH,sDAWZ1B,EAAiB,mCAAG,WAAOpB,GAAP,gGAEC2C,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAzC,EADA,oBACmBwC,IAHpB,cAEhBI,EAFgB,yBAKfA,EAASC,MALM,oGAAH,sDAWjBI,EAAiB,mCAAG,WAAOjD,GAAP,gGAEC2C,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAzC,EADA,4BAC2BwC,IAH5B,cAEhBI,EAFgB,yBAKfA,EAASC,KAAKK,MALC,oGAAH,sDAWjB5B,EAAiB,mCAAG,WAAOtB,GAAP,gGAEC2C,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAzC,EADA,4BAC2BwC,IAH5B,cAEhBI,EAFgB,yBAKfA,EAASC,KAAKC,SALC,oGAAH,qD","sources":["components/MovieDetails/MovieDetails.jsx","components/api.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams, Link, Outlet, useNavigate, useLocation } from 'react-router-dom';\nimport { fetchMovieDetails, fetchMovieReviews} from '../api';\n\nfunction MovieDetails({ clearSearch }) {\n  const { movieId } = useParams();\n  const { search } = useLocation();\n  const fromMovies = new URLSearchParams(search).get('fromMovies');\n  const [movieDetails, setMovieDetails] = useState({});\n  const [castVisible, setCastVisible] = useState(false);\n  const [reviewsVisible, setReviewsVisible] = useState(false);\n  const [reviews, setReviews] = useState([]);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    clearSearch();\n\n    const fetchData = async () => {\n      try {\n        const movieData = await fetchMovieDetails(movieId);\n        setMovieDetails(movieData);\n\n        const movieReviews = await fetchMovieReviews(movieId);\n        setReviews(movieReviews);\n      } catch (error) {\n        console.error('Помилка під час завантаження даних:', error);\n      }\n    };\n\n    fetchData();\n  }, [movieId, clearSearch]);\n\n  const posterUrl = movieDetails.poster_path\n    ? `https://image.tmdb.org/t/p/w500/${movieDetails.poster_path}`\n    : '';\n\n  const goBack = () => {\n    if (fromMovies === 'true') {\n      navigate('/movies');\n    } else {\n      navigate('/');\n    }\n  };\n\n  const toggleCastVisibility = () => {\n    setCastVisible((prevState) => !prevState);\n    setReviewsVisible(false);\n  };\n\n  const toggleReviewsVisibility = () => {\n    setReviewsVisible((prevState) => !prevState);\n    setCastVisible(false);\n  };\n\n  return (\n    <div>\n      <button onClick={goBack}>Go back</button>\n      <h1>{movieDetails.title}</h1>\n      {posterUrl && <img src={posterUrl} alt={movieDetails.title} />}\n      <p>{movieDetails.overview}</p>\n      <ul>\n        <li>\n          <Link to={`/movies/${movieId}/cast?fromMovies=${fromMovies}`} onClick={toggleCastVisibility}>\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link to={`/movies/${movieId}/reviews?fromMovies=${fromMovies}`} onClick={toggleReviewsVisibility}>\n            Reviews\n          </Link>\n        </li>\n      </ul>\n\n      {castVisible && <Outlet />}\n\n      {reviewsVisible && (\n        <div>\n          <ul>\n            {reviews.map((review) => (\n              <li key={review.id}>\n                <p>Author: {review.author}</p>\n                <p>{review.content}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default MovieDetails;","//  import axios from 'axios';\n\n// const API_KEY = '4f40632f604dfec179dda8e530bb62da';\n// const BASE_URL = 'https://api.themoviedb.org/3';\n\n// const fetchTrendingMovies = async () => {\n//   try {\n//     const response = await axios.get(\n//       `${BASE_URL}/trending/movie/week?api_key=${API_KEY}`\n//     );\n//     return response.data.results;\n//   } catch (error) {\n//     throw error;\n//   }\n// };\n\n// const searchMovies = async (query) => {\n//   try {\n//     const response = await axios.get(\n//       `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n//     );\n//     return response.data.results;\n//   } catch (error) {\n//     throw error;\n//   }\n// };\n\n// const fetchMovieDetails = async (movieId) => {\n//   try {\n//     const response = await axios.get(\n//       `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n//     );\n//     return response.data;\n//   } catch (error) {\n//     throw error;\n//   }\n// };\n\n// const fetchMovieCredits = async (movieId) => {\n//   try {\n//     const response = await axios.get(\n//       `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n//     );\n//     return response.data.cast;\n//   } catch (error) {\n//     throw error;\n//   }\n// };\n\n// const fetchMovieReviews = async (movieId) => {\n//   try {\n//     const response = await axios.get(\n//       `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n//     );\n//     return response.data.results;\n//   } catch (error) {\n//     throw error;\n//   }\n// };\n\n// export {\n//   fetchTrendingMovies,\n//   searchMovies,\n//   fetchMovieDetails,\n//   fetchMovieCredits,\n//   fetchMovieReviews,\n// };\n\n\n\n\n\n\n\n\n\n\n\nimport axios from 'axios';\n\nconst API_KEY = '4f40632f604dfec179dda8e530bb62da';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst fetchTrendingMovies = async () => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/trending/movie/week?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    throw error;\n  }\n};\n\nconst searchMovies = async (query) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return response.data.results;\n  } catch (error) {\n    throw error;\n  }\n};\n\nconst fetchMovieDetails = async (movieId) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nconst fetchMovieCredits = async (movieId) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return response.data.cast;\n  } catch (error) {\n    throw error;\n  }\n};\n\nconst fetchMovieReviews = async (movieId) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport {\n  fetchTrendingMovies,\n  searchMovies,\n  fetchMovieDetails,\n  fetchMovieCredits,\n  fetchMovieReviews,\n};"],"names":["clearSearch","movieId","useParams","search","useLocation","fromMovies","URLSearchParams","get","useState","movieDetails","setMovieDetails","castVisible","setCastVisible","reviewsVisible","setReviewsVisible","reviews","setReviews","navigate","useNavigate","useEffect","fetchData","fetchMovieDetails","movieData","fetchMovieReviews","movieReviews","console","error","posterUrl","poster_path","onClick","title","src","alt","overview","to","prevState","map","review","author","content","id","API_KEY","BASE_URL","fetchTrendingMovies","axios","response","data","results","searchMovies","query","fetchMovieCredits","cast"],"sourceRoot":""}
{"version":3,"file":"static/js/947.0fc3bf29.chunk.js","mappings":"sMAwFA,UApFA,WACE,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,CAAC,GAAlD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAsCF,EAAAA,EAAAA,WAAS,GAA/C,eAAOG,EAAP,KAAoBC,EAApB,KACA,GAA4CJ,EAAAA,EAAAA,WAAS,GAArD,eAAOK,EAAP,KAAuBC,EAAvB,KACA,GAA8BN,EAAAA,EAAAA,UAAS,IAAvC,eAAOO,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAkBd,GACfe,MAAK,SAACZ,GACLC,EAAgBD,EACjB,IACAa,OAAM,SAACC,GACNC,QAAQD,MAAM,gCAAiCA,EAChD,IAECV,IACFY,EAAAA,EAAAA,IAAkBnB,GACfe,MAAK,SAACN,GACLC,EAAWD,EACZ,IACAO,OAAM,SAACC,GACNC,QAAQD,MAAM,0BAA2BA,EAC1C,GAEN,GAAE,CAACjB,EAASO,IAEb,IAAMa,EAAS,0CAAsCjB,EAAakB,aAUlE,OACE,4BACE,mBAAQC,QAAS,kBAAMX,EAAS,IAAf,EAAjB,sBACA,wBAAKR,EAAaoB,SAClB,gBAAKC,IAAKJ,EAAWK,IAAKtB,EAAaoB,SACvC,uBAAIpB,EAAauB,YACjB,2BACE,yBACE,SAAC,KAAD,CACEC,GAAE,kBAAa3B,EAAb,SACFsB,QAlBmB,WAC3BhB,GAAe,SAACsB,GAAD,OAAgBA,CAAhB,GAChB,EAcO,qBAOF,yBACE,SAAC,KAAD,CACED,GAAE,kBAAa3B,EAAb,YACFsB,QAtBsB,WAC9Bd,GAAkB,SAACoB,GAAD,OAAgBA,CAAhB,GACnB,EAkBO,0BASHvB,IAAe,SAAC,KAAD,IAGfE,EACCE,EAAQoB,OAAS,GACf,wBACGpB,EAAQqB,KAAI,SAACC,GAAD,OACX,2BACE,oCAAYA,EAAOC,WACnB,uBAAID,EAAOE,YAFJF,EAAOG,GADL,OAQf,qEAEA,OAGT,C,+LCpFKC,EAAU,mCACVC,EAAW,+BAEXC,EAAmB,mCAAG,6GAEDC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,wCACsBD,IAHrB,cAElBI,EAFkB,yBAKjBA,EAASC,KAAKC,SALG,oGAAH,qDAWnBC,EAAY,mCAAG,WAAOC,GAAP,gGAEML,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iCACeD,EADf,kBACgCQ,IAHtC,cAEXJ,EAFW,yBAKVA,EAASC,KAAKC,SALJ,oGAAH,sDAWZ3B,EAAiB,mCAAG,WAAOd,GAAP,gGAECsC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACApC,EADA,oBACmBmC,IAHpB,cAEhBI,EAFgB,yBAKfA,EAASC,MALM,oGAAH,sDAWjBI,EAAiB,mCAAG,WAAO5C,GAAP,gGAECsC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACApC,EADA,4BAC2BmC,IAH5B,cAEhBI,EAFgB,yBAKfA,EAASC,KAAKK,MALC,oGAAH,sDAWjB1B,EAAiB,mCAAG,WAAOnB,GAAP,gGAECsC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACApC,EADA,4BAC2BmC,IAH5B,cAEhBI,EAFgB,yBAKfA,EAASC,KAAKC,SALC,oGAAH,qD","sources":["components/MovieDetails/MovieDetails.jsx","components/api.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams, Link, useNavigate, Outlet } from 'react-router-dom';\nimport { fetchMovieDetails, fetchMovieReviews } from '../api';\n\nfunction MovieDetails() {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState({});\n  const [castVisible, setCastVisible] = useState(false);\n  const [reviewsVisible, setReviewsVisible] = useState(false);\n  const [reviews, setReviews] = useState([]);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetchMovieDetails(movieId)\n      .then((movieDetails) => {\n        setMovieDetails(movieDetails);\n      })\n      .catch((error) => {\n        console.error('Error fetching movie details:', error);\n      });\n\n    if (reviewsVisible) {\n      fetchMovieReviews(movieId)\n        .then((reviews) => {\n          setReviews(reviews);\n        })\n        .catch((error) => {\n          console.error('Error fetching reviews:', error);\n        });\n    }\n  }, [movieId, reviewsVisible]);\n\n  const posterUrl = `https://image.tmdb.org/t/p/w500/${movieDetails.poster_path}`;\n\n  const toggleCastVisibility = () => {\n    setCastVisible((prevState) => !prevState);\n  };\n\n  const toggleReviewsVisibility = () => {\n    setReviewsVisible((prevState) => !prevState);\n  };\n\n  return (\n    <div>\n      <button onClick={() => navigate('/')}>Go Back</button>\n      <h1>{movieDetails.title}</h1>\n      <img src={posterUrl} alt={movieDetails.title} />\n      <p>{movieDetails.overview}</p>\n      <ul>\n        <li>\n          <Link\n            to={`/movies/${movieId}/cast`}\n            onClick={toggleCastVisibility}\n          >\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link\n            to={`/movies/${movieId}/reviews`}\n            onClick={toggleReviewsVisibility}\n          >\n            Reviews\n          </Link>\n        </li>\n      </ul>\n\n      {castVisible && <Outlet />}\n\n     \n      {reviewsVisible ? (\n        reviews.length > 0 ? (\n          <ul>\n            {reviews.map((review) => (\n              <li key={review.id}>\n                <p>Author: {review.author}</p>\n                <p>{review.content}</p>\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p>We don't have any reviews for this movie.</p>\n        )\n      ) : null}\n    </div>\n  );\n}\n\nexport default MovieDetails;"," import axios from 'axios';\n\nconst API_KEY = '4f40632f604dfec179dda8e530bb62da';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst fetchTrendingMovies = async () => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/trending/movie/week?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    throw error;\n  }\n};\n\nconst searchMovies = async (query) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return response.data.results;\n  } catch (error) {\n    throw error;\n  }\n};\n\nconst fetchMovieDetails = async (movieId) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nconst fetchMovieCredits = async (movieId) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return response.data.cast;\n  } catch (error) {\n    throw error;\n  }\n};\n\nconst fetchMovieReviews = async (movieId) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport {\n  fetchTrendingMovies,\n  searchMovies,\n  fetchMovieDetails,\n  fetchMovieCredits,\n  fetchMovieReviews,\n};"],"names":["movieId","useParams","useState","movieDetails","setMovieDetails","castVisible","setCastVisible","reviewsVisible","setReviewsVisible","reviews","setReviews","navigate","useNavigate","useEffect","fetchMovieDetails","then","catch","error","console","fetchMovieReviews","posterUrl","poster_path","onClick","title","src","alt","overview","to","prevState","length","map","review","author","content","id","API_KEY","BASE_URL","fetchTrendingMovies","axios","response","data","results","searchMovies","query","fetchMovieCredits","cast"],"sourceRoot":""}
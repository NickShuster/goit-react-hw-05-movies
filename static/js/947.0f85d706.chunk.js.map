{"version":3,"file":"static/js/947.0f85d706.chunk.js","mappings":"iOA0FA,UAtFA,YAAwC,IAAhBA,EAAe,EAAfA,YACdC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,CAAC,GAAlD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAsCF,EAAAA,EAAAA,WAAS,GAA/C,eAAOG,EAAP,KAAoBC,EAApB,KACA,GAA4CJ,EAAAA,EAAAA,WAAS,GAArD,eAAOK,EAAP,KAAuBC,EAAvB,KACA,GAA8BN,EAAAA,EAAAA,UAAS,IAAvC,eAAOO,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRhB,IAEA,IAAMiB,EAAS,mCAAG,gHAEUC,EAAAA,EAAAA,IAAkBjB,GAF5B,cAERkB,EAFQ,OAGdd,EAAgBc,GAHF,UAKaC,EAAAA,EAAAA,IAAkBnB,GAL/B,OAKRoB,EALQ,OAMdV,EAAWU,GANG,kDAQdC,QAAQC,MAAM,4LAAd,MARc,0DAAH,qDAYfN,GACD,GAAE,CAAChB,EAASD,IAEb,IAAMwB,EAAYpB,EAAaqB,YAAb,0CACqBrB,EAAaqB,aAChD,GAoBJ,OACE,4BACE,mBAAQC,QApBG,WACTZ,EAASa,OAASb,EAASa,MAAMC,KACnChB,EAASE,EAASa,MAAMC,MAExBhB,GAAU,EAEb,EAcG,sBACA,wBAAKR,EAAayB,QACjBL,IAAa,gBAAKM,IAAKN,EAAWO,IAAK3B,EAAayB,SACrD,uBAAIzB,EAAa4B,YACjB,2BACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAahC,EAAb,SAA6ByB,QAlBhB,WAC3BnB,GAAe,SAAC2B,GAAD,OAAgBA,CAAhB,IACfzB,GAAkB,EACnB,EAeO,qBAIF,yBACE,SAAC,KAAD,CAAMwB,GAAE,kBAAahC,EAAb,YAAgCyB,QAlBhB,WAC9BjB,GAAkB,SAACyB,GAAD,OAAgBA,CAAhB,IAClB3B,GAAe,EAChB,EAeO,0BAMHD,IAAe,SAAC,KAAD,IAEfE,IACC,0BACE,wBACGE,EAAQyB,KAAI,SAACC,GAAD,OACX,2BACE,oCAAYA,EAAOC,WACnB,uBAAID,EAAOE,YAFJF,EAAOG,GADL,UAWxB,C,+LCtFKC,EAAU,mCACVC,EAAW,+BAEXC,EAAmB,mCAAG,6GAEDC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,wCACsBD,IAHrB,cAElBI,EAFkB,yBAKjBA,EAASC,KAAKC,SALG,oGAAH,qDAWnBC,EAAY,mCAAG,WAAOC,GAAP,gGAEML,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iCACeD,EADf,kBACgCQ,IAHtC,cAEXJ,EAFW,yBAKVA,EAASC,KAAKC,SALJ,oGAAH,sDAWZ5B,EAAiB,mCAAG,WAAOjB,GAAP,gGAEC0C,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAxC,EADA,oBACmBuC,IAHpB,cAEhBI,EAFgB,yBAKfA,EAASC,MALM,oGAAH,sDAWjBI,EAAiB,mCAAG,WAAOhD,GAAP,gGAEC0C,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAxC,EADA,4BAC2BuC,IAH5B,cAEhBI,EAFgB,yBAKfA,EAASC,KAAKK,MALC,oGAAH,sDAWjB9B,EAAiB,mCAAG,WAAOnB,GAAP,gGAEC0C,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAxC,EADA,4BAC2BuC,IAH5B,cAEhBI,EAFgB,yBAKfA,EAASC,KAAKC,SALC,oGAAH,qD","sources":["components/MovieDetails/MovieDetails.jsx","components/api.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams, Link, Outlet, useNavigate, useLocation } from 'react-router-dom';\nimport { fetchMovieDetails, fetchMovieReviews } from '../api';\n\nfunction MovieDetails({ clearSearch }) {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState({});\n  const [castVisible, setCastVisible] = useState(false);\n  const [reviewsVisible, setReviewsVisible] = useState(false);\n  const [reviews, setReviews] = useState([]);\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    clearSearch();\n\n    const fetchData = async () => {\n      try {\n        const movieData = await fetchMovieDetails(movieId);\n        setMovieDetails(movieData);\n\n        const movieReviews = await fetchMovieReviews(movieId);\n        setReviews(movieReviews);\n      } catch (error) {\n        console.error('Помилка під час завантаження даних:', error);\n      }\n    };\n\n    fetchData();\n  }, [movieId, clearSearch]);\n\n  const posterUrl = movieDetails.poster_path\n    ? `https://image.tmdb.org/t/p/w500/${movieDetails.poster_path}`\n    : '';\n\n  const goBack = () => {\n    if (location.state && location.state.from) {\n      navigate(location.state.from);\n    } else {\n      navigate(-1);\n    }\n  };\n\n  const toggleCastVisibility = () => {\n    setCastVisible((prevState) => !prevState);\n    setReviewsVisible(false); \n  };\n\n  const toggleReviewsVisibility = () => {\n    setReviewsVisible((prevState) => !prevState);\n    setCastVisible(false); \n  };\n\n  return (\n    <div>\n      <button onClick={goBack}>Go back</button>\n      <h1>{movieDetails.title}</h1>\n      {posterUrl && <img src={posterUrl} alt={movieDetails.title} />}\n      <p>{movieDetails.overview}</p>\n      <ul>\n        <li>\n          <Link to={`/movies/${movieId}/cast`} onClick={toggleCastVisibility}>\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link to={`/movies/${movieId}/reviews`} onClick={toggleReviewsVisibility}>\n            Reviews\n          </Link>\n        </li>\n      </ul>\n\n      {castVisible && <Outlet />}\n\n      {reviewsVisible && (\n        <div>\n          <ul>\n            {reviews.map((review) => (\n              <li key={review.id}>\n                <p>Author: {review.author}</p>\n                <p>{review.content}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default MovieDetails;\n"," import axios from 'axios';\n\nconst API_KEY = '4f40632f604dfec179dda8e530bb62da';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst fetchTrendingMovies = async () => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/trending/movie/week?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    throw error;\n  }\n};\n\nconst searchMovies = async (query) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return response.data.results;\n  } catch (error) {\n    throw error;\n  }\n};\n\nconst fetchMovieDetails = async (movieId) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nconst fetchMovieCredits = async (movieId) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return response.data.cast;\n  } catch (error) {\n    throw error;\n  }\n};\n\nconst fetchMovieReviews = async (movieId) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport {\n  fetchTrendingMovies,\n  searchMovies,\n  fetchMovieDetails,\n  fetchMovieCredits,\n  fetchMovieReviews,\n};"],"names":["clearSearch","movieId","useParams","useState","movieDetails","setMovieDetails","castVisible","setCastVisible","reviewsVisible","setReviewsVisible","reviews","setReviews","navigate","useNavigate","location","useLocation","useEffect","fetchData","fetchMovieDetails","movieData","fetchMovieReviews","movieReviews","console","error","posterUrl","poster_path","onClick","state","from","title","src","alt","overview","to","prevState","map","review","author","content","id","API_KEY","BASE_URL","fetchTrendingMovies","axios","response","data","results","searchMovies","query","fetchMovieCredits","cast"],"sourceRoot":""}
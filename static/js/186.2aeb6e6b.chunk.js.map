{"version":3,"file":"static/js/186.2aeb6e6b.chunk.js","mappings":"yNAwCA,UApCA,WACE,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,8GAEMC,EAAAA,EAAAA,IAAkBP,GAFxB,OAEdQ,EAFc,OAGpBJ,EAAWI,GAHS,gDAKpBC,QAAQC,MAAM,uBAAd,MALoB,yDAAH,qDASrBJ,GACD,GAAE,CAACN,KAGF,4BACE,oCACCG,EAAQQ,OAAS,GAChB,wBACGR,EAAQS,KAAI,SAACC,GAAD,OACX,2BACE,wBAAKA,EAAOC,UACZ,uBAAID,EAAOE,YAFJF,EAAOG,GADL,OAQf,kDAIP,C,+LCpCKC,EAAU,mCACVC,EAAW,+BAEXC,EAAmB,mCAAG,6GAEDC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,wCACsBD,IAHrB,cAElBI,EAFkB,yBAKjBA,EAASC,KAAKC,SALG,oGAAH,qDAWnBC,EAAY,mCAAG,WAAOC,GAAP,gGAEML,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iCACeD,EADf,kBACgCQ,IAHtC,cAEXJ,EAFW,yBAKVA,EAASC,KAAKC,SALJ,oGAAH,sDAWZG,EAAiB,mCAAG,WAAO1B,GAAP,gGAECoB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAlB,EADA,oBACmBiB,IAHpB,cAEhBI,EAFgB,yBAKfA,EAASC,MALM,oGAAH,sDAWjBK,EAAiB,mCAAG,WAAO3B,GAAP,gGAECoB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAlB,EADA,4BAC2BiB,IAH5B,cAEhBI,EAFgB,yBAKfA,EAASC,KAAKM,MALC,oGAAH,sDAWjBrB,EAAiB,mCAAG,WAAOP,GAAP,gGAECoB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAlB,EADA,4BAC2BiB,IAH5B,cAEhBI,EAFgB,yBAKfA,EAASC,KAAKC,SALC,oGAAH,qD","sources":["components/Reviews/Reviews.jsx","components/api.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from '../api';\n\nfunction Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const getMovieReviews = async () => {\n      try {\n        const reviewsData = await fetchMovieReviews(movieId);\n        setReviews(reviewsData);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    getMovieReviews();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Reviews</h2>\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map((review) => (\n            <li key={review.id}>\n              <h3>{review.author}</h3>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No reviews available</p>\n      )}\n    </div>\n  );\n}\n\nexport default Reviews;"," import axios from 'axios';\n\nconst API_KEY = '4f40632f604dfec179dda8e530bb62da';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst fetchTrendingMovies = async () => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/trending/movie/week?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    throw error;\n  }\n};\n\nconst searchMovies = async (query) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return response.data.results;\n  } catch (error) {\n    throw error;\n  }\n};\n\nconst fetchMovieDetails = async (movieId) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nconst fetchMovieCredits = async (movieId) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return response.data.cast;\n  } catch (error) {\n    throw error;\n  }\n};\n\nconst fetchMovieReviews = async (movieId) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport {\n  fetchTrendingMovies,\n  searchMovies,\n  fetchMovieDetails,\n  fetchMovieCredits,\n  fetchMovieReviews,\n};"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","getMovieReviews","fetchMovieReviews","reviewsData","console","error","length","map","review","author","content","id","API_KEY","BASE_URL","fetchTrendingMovies","axios","response","data","results","searchMovies","query","fetchMovieDetails","fetchMovieCredits","cast"],"sourceRoot":""}
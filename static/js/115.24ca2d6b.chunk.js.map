{"version":3,"file":"static/js/115.24ca2d6b.chunk.js","mappings":"wNAgEA,UA5DA,WACE,OAAsCA,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA0CF,EAAAA,EAAAA,UAAS,IAAnD,eAAOG,EAAP,KAAsBC,EAAtB,KACA,GAAwCJ,EAAAA,EAAAA,WAAS,GAAjD,eAAOK,EAAP,KAAqBC,EAArB,KAMMC,EAAY,mCAAG,oGAEjBH,EAAiB,IAFA,UAGKI,EAAAA,EAAAA,IAAaP,GAHlB,OAGXQ,EAHW,OAIjBL,EAAiBK,GACjBH,GAAgB,GAGhBI,aAAaC,QAAQ,gBAAiBC,KAAKC,UAAUJ,IARpC,kDAUjBK,QAAQC,MAAM,oKAAd,MAViB,0DAAH,qDAwBlB,OAVAC,EAAAA,EAAAA,YAAU,WAGR,IAAMC,EAAqBL,KAAKM,MAAMR,aAAaS,QAAQ,kBACvDF,GAAsBA,EAAmBG,OAAS,IACpDhB,EAAiBa,GACjBX,GAAgB,GAEnB,GAAE,KAGD,4BACE,4BACE,kBACEe,KAAK,OACLC,YAAY,uBAEZC,MAAOtB,EACPuB,SApCmB,SAACC,GAC1BvB,EAAeuB,EAAEC,OAAOH,MACzB,KAoCK,mBAAQI,QAASpB,EAAjB,uBAEDF,GAAgBF,EAAciB,OAAS,IACtC,wBACGjB,EAAcyB,KAAI,SAACC,GAAD,OACjB,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,GAAnB,oBAAR,SACGF,EAAMG,SAFFH,EAAME,GADE,QAW5B,C,uNC5DKE,EAAU,mCACVC,EAAW,+BAEXC,EAAmB,mCAAG,6GAEDC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,wCACsBD,IAHrB,cAElBI,EAFkB,yBAKjBA,EAASC,KAAK7B,SALG,oGAAH,qDAWnBD,EAAY,mCAAG,WAAO+B,GAAP,gGAEMH,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iCACeD,EADf,kBACgCM,IAHtC,cAEXF,EAFW,yBAKVA,EAASC,KAAK7B,SALJ,oGAAH,sDAWZ+B,EAAiB,mCAAG,WAAOC,GAAP,gGAECL,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAO,EADA,oBACmBR,IAHpB,cAEhBI,EAFgB,yBAKfA,EAASC,MALM,oGAAH,sDAWjBI,EAAiB,mCAAG,WAAOD,GAAP,gGAECL,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAO,EADA,4BAC2BR,IAH5B,cAEhBI,EAFgB,yBAKfA,EAASC,KAAKK,MALC,oGAAH,sDAWjBC,EAAgB,mCAAG,WAAOC,GAAP,gGAEET,EAAAA,EAAAA,IAAA,UAClBF,EADkB,mBACCW,EADD,2BAC2BZ,IAH7B,cAEfI,EAFe,yBAKdA,EAASC,KAAKQ,UALA,oGAAH,sDAWhBC,EAAiB,mCAAG,WAAON,GAAP,gGAECL,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAO,EADA,4BAC2BR,IAH5B,cAEhBI,EAFgB,yBAKfA,EAASC,KAAK7B,SALC,oGAAH,qD","sources":["components/Movies/Movies.jsx","components/api.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { searchMovies } from '../api';\n\nfunction Movies() {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchedOnce, setSearchedOnce] = useState(false);\n\n  const handleSearchChange = (e) => {\n    setSearchQuery(e.target.value);\n  };\n\n  const handleSearch = async () => {\n    try {\n      setSearchResults([]);\n      const results = await searchMovies(searchQuery);\n      setSearchResults(results);\n      setSearchedOnce(true);\n\n\n      localStorage.setItem('searchResults', JSON.stringify(results));\n    } catch (error) {\n      console.error('Помилка під час пошуку фільмів:', error);\n    }\n  };\n\n  useEffect(() => {\n\n\n    const savedSearchResults = JSON.parse(localStorage.getItem('searchResults'));\n    if (savedSearchResults && savedSearchResults.length > 0) {\n      setSearchResults(savedSearchResults);\n      setSearchedOnce(true);\n    }\n  }, []);\n\n  return (\n    <div>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Search for movies...\"\n          \n          value={searchQuery}\n          onChange={handleSearchChange}\n        />\n        <button onClick={handleSearch}>Search</button>\n      </div>\n      {searchedOnce && searchResults.length > 0 && (\n        <ul>\n          {searchResults.map((movie) => (\n            <li key={movie.id}>\n              <Link to={`/movies/${movie.id}?fromMovies=true`}>\n                {movie.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nexport default Movies;","import axios from 'axios';\n\nconst API_KEY = '4f40632f604dfec179dda8e530bb62da';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst fetchTrendingMovies = async () => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/trending/movie/week?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    throw error;\n  }\n};\n\nconst searchMovies = async (query) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return response.data.results;\n  } catch (error) {\n    throw error;\n  }\n};\n\nconst fetchMovieDetails = async (movieId) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nconst fetchMovieCredits = async (movieId) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return response.data.cast;\n  } catch (error) {\n    throw error;\n  }\n};\n\nconst fetchActorImages = async (actorId) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/person/${actorId}/images?api_key=${API_KEY}`\n    );\n    return response.data.profiles;\n  } catch (error) {\n    throw error;\n  }\n};\n\nconst fetchMovieReviews = async (movieId) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport {\n  fetchTrendingMovies,\n  searchMovies,\n  fetchMovieDetails,\n  fetchMovieCredits,\n  fetchMovieReviews,\n  fetchActorImages,\n};"],"names":["useState","searchQuery","setSearchQuery","searchResults","setSearchResults","searchedOnce","setSearchedOnce","handleSearch","searchMovies","results","localStorage","setItem","JSON","stringify","console","error","useEffect","savedSearchResults","parse","getItem","length","type","placeholder","value","onChange","e","target","onClick","map","movie","to","id","title","API_KEY","BASE_URL","fetchTrendingMovies","axios","response","data","query","fetchMovieDetails","movieId","fetchMovieCredits","cast","fetchActorImages","actorId","profiles","fetchMovieReviews"],"sourceRoot":""}